/* asNEAT 0.2.0 2014-07-19 */

define("asNEAT/asNEAT",["exports"],function(a){"use strict";var b={};window.AudioContext=window.AudioContext||window.webkitAudioContext||function(){this.supported=!1},b.context=new window.AudioContext,"undefined"==typeof b.context.supported&&(b.context.supported=!0),b.context.createGain&&(b.globalGain=b.context.createGain(),b.globalGain.gain.value=.5,b.globalGain.connect(b.context.destination)),b.nodeTypes=["gainNode","filterNode","delayNode","feedbackDelayNode","compressorNode","convolverNode"],a["default"]=b}),define("asNEAT/connection",["exports"],function(a){"use strict";var b=require("asNEAT/utils")["default"],c=(b.log,require("asNEAT/asNEAT")["default"].context),d="Connection",e=function(a){b.extend(this,this.defaultParameters,a),this.gainNode=null,this.hasChanged=!1,this.id=a&&"undefined"!=typeof a.id?a.id:b.createHash()};e.prototype.name=d,e.prototype.defaultParameters={sourceNode:null,targetNode:null,targetParameter:null,targetParameterNodeName:"node",weight:1,enabled:!0,mutationDeltaChance:.8,mutationDelta:{min:-.2,max:.2},randomMutationRange:{min:.1,max:1.5},discreteMutation:!1},e.prototype.clone=function(a,b){var c=a||this.sourceNode.clone(),d=b||this.targetNode.clone();return new e({id:this.id,sourceNode:c,targetNode:d,targetParameter:this.targetParameter,targetParameterNodeName:this.targetParameterNodeName,weight:this.weight,enabled:this.enabled,mutationDeltaChance:this.mutationDeltaChance,mutationDelta:_.clone(this.mutationDelta),randomMutationRange:_.clone(this.randomMutationRange),discreteMutation:this.discreteMutation})},e.prototype.connect=function(){if(this.enabled){this.gainNode=c.createGain(),this.gainNode.gain.value=this.weight,this.sourceNode.node.connect(this.gainNode);var a=this.targetParameter;if(null===a)this.gainNode.connect(this.targetNode.node);else{var b=this.targetParameterNodeName?this.targetParameterNodeName:"node";this.gainNode.connect(this.targetNode[b][a])}return this}},e.prototype.disable=function(){return this.enabled=!1,this},e.prototype.mutate=function(){b.mutateParameter({obj:this,parameter:"weight",mutationDeltaChance:this.mutationDeltaChance,mutationDelta:this.mutationDelta,randomMutationRange:this.randomMutationRange});return this},e.prototype.getParameters=function(){return{name:d,id:this.id,weight:this.weight,enabled:this.enabled,sourceNode:this.sourceNode.name,targetNode:this.targetNode.name,targetParameter:this.targetParameter}},e.prototype.toString=function(){return(this.enabled?"":"*")+"connection("+this.weight.toFixed(2)+")("+this.sourceNode.id+" --> "+this.targetNode.id+(this.targetParameter?": "+this.targetParameter:"")+")"},e.prototype.toJSON=function(){var a={id:this.id,sourceNode:this.sourceNode.id,targetNode:this.targetNode.id,targetParameter:this.targetParameter,targetParameterNodeName:this.targetParameterNodeName,weight:this.weight,enabled:this.enabled};return JSON.stringify(a)},a["default"]=e}),define("asNEAT/network",["exports"],function(a){"use strict";function b(){_.forEach(this.nodes,function(a){a.refresh()}),_.forEach(this.connections,function(a){a.connect()})}function c(a){if(null==a)throw"no last mutation from mutate";_.forEach(a.objectsChanged,function(a){a.hasChanged=!0})}var d=require("asNEAT/utils")["default"],e=require("asNEAT/nodes/noteOscillatorNode")["default"],f=require("asNEAT/nodes/oscillatorNode")["default"],g=require("asNEAT/nodes/outNode")["default"],h=require("asNEAT/connection")["default"],i=require("asNEAT/asNEAT")["default"].nodeTypes,j=d.log,k="Network",l=new g,m=function(a){if(d.extend(this,this.defaultParameters,a),this.lastMutation=null,0===this.nodes.length){var b=e.random();b.noteOffset=0,this.nodes.push(l),this.nodes.push(b)}0===this.connections.length&&this.connections.push(new h({sourceNode:this.nodes[1],targetNode:this.nodes[0],weight:.5})),this.id=a&&"undefined"!=typeof a.id?a.id:d.createHash()};m.prototype.name=k,m.prototype.defaultParameters={nodes:[],connections:[],connectionMutationRate:.1,nodeMutationRate:.1,addOscillatorFMMutationRate:.5,addConnectionFMMutationRate:.5},m.prototype.clone=function(){var a=[];_.forEach(this.nodes,function(b){a.push(b.clone())});var b=[];return _.forEach(this.connections,function(c){var d=_.find(a,{id:c.sourceNode.id}),e=_.find(a,{id:c.targetNode.id});b.push(c.clone(d,e))}),new m({nodes:a,connections:b,connectionMutationRate:this.connectionMutationRate,nodeMutationRate:this.nodeMutationRate})},m.prototype.crossWith=function(a){function b(a,b){var c=a.clone();"undefined"==typeof b?(n.push(c),h[a.id]=n.length-1):n[b]=c}function e(a,b){var c=_.find(n,{id:a.sourceNode.id}),d=_.find(n,{id:a.targetNode.id}),e=a.clone(c,d);"undefined"==typeof b?(o.push(e),h[a.id]=o.length-1):o[b]=e}function f(a,b,c){h={},_.forEach(a,function(a){c(a)}),_.forEach(b,function(a){var b=h[a.id];"undefined"==typeof b?c(a):d.randomBool()&&c(a,b)})}var g,h,i=this.nodes,j=a.nodes,k=this.connections,l=a.connections,n=[],o=[];return f(i,j,b),f(k,l,e),g=new m({nodes:n,connections:o}),g.lastMutation={objectsChanged:[],changeDescription:"Crossed instruments "+this.id+" & "+a.id},c(g.lastMutation),g},m.prototype.play=function(){return b.call(this),_.forEach(this.nodes,function(a){a.play&&a.play()}),this},m.prototype.playHold=function(){b.call(this);var a=[];return _.forEach(this.nodes,function(b){b.playHold&&a.push(b.playHold())}),function(){_.forEach(a,function(a){a()})}},m.prototype.mutate=function(){var a=[{weight:.2,element:this.splitMutation},{weight:.2,element:this.addOscillator},{weight:.2,element:this.addConnection},{weight:.2,element:this.mutateConnectionWeights},{weight:.2,element:this.mutateNodeParameters}],b=d.weightedSelection(a);return b.call(this),_.forEach(this.nodes,function(a){a.hasChanged=!1}),_.forEach(this.connections,function(a){a.hasChanged=!1}),c(this.lastMutation),this},m.prototype.splitMutation=function(){var a,b,c,e=this.getEnabledConnections(),f=e.length,g=d.randomIndexIn(0,f),k=e[g],l=k.targetNode,m=i.length,n=d.randomIndexIn(0,m),o=i[n],p=require("asNEAT/nodes/"+o)["default"];return a=p.random(),b=new h({sourceNode:k.sourceNode,targetNode:a,weight:1}),c=new h({sourceNode:a,targetNode:l,targetParameter:k.targetParameter,targetParameterNodeName:k.targetParameterNodeName,weight:k.weight,mutationDelta:_.cloneDeep(l.mutationDelta),randomMutationRange:_.cloneDeep(l.randomMutationRange)}),k.disable(),this.nodes.push(a),this.connections.push(b),this.connections.push(c),j("splitting conn "+k.toString()+" with "+a.toString()),this.lastMutation={objectsChanged:[a,b,c],changeDescription:"Split Connection"},this},m.prototype.addOscillator=function(){var a,b,c,g;if(d.randomChance(this.addOscillatorFMMutationRate)){a=f.random(),b=_.filter(this.nodes,function(a){return a.connectableParameters&&a.connectableParameters.length>0}),c=d.randomElementIn(b);var i=d.randomElementIn(c.connectableParameters),k=i.amplitudeScaling.min,l=i.amplitudeScaling.max;g=new h({sourceNode:a,targetNode:c,targetParameter:i.name,targetParameterNodeName:i.nodeName,weight:d.randomIn(k,l),mutationDelta:{min:k/12,max:k/12},randomMutationRange:{min:k,max:l}}),j("adding fm oscillator("+i.name+") "+a.toString())}else a=e.random(),b=_.filter(this.nodes,function(a){return"OscillatorNode"!==a.name&&"NoteOscillatorNode"!==a.name}),c=d.randomElementIn(b),g=new h({sourceNode:a,targetNode:c,weight:.5}),j("adding audio oscillator "+a.toString());return this.nodes.push(a),this.connections.push(g),this.lastMutation={objectsChanged:[a,g],changeDescription:"Added Oscillator"},this},m.prototype.addConnection=function(){var a=d.randomChance(this.addConnectionFMMutationRate),b=this.getPossibleNewConnections(a);if(0===b.length)return j("no possible Connections"),this.lastMutation={objectsChanged:[],changeDescription:"No Mutation (No "+(a?"FM ":"")+"connections to add)"},this;var c=d.randomElementIn(b);return this.connections.push(c),j("new connection: "+c.toString()),this.lastMutation={objectsChanged:[c],changeDescription:"Added Connection"},this},m.prototype.getPossibleNewConnections=function(a){var b=this,c=[];return _.forEach(this.nodes,function(e){"OutNode"!==e.name&&_.forEach(b.nodes,function(f){if((!a||f.connectableParameters&&0!==f.connectableParameters.length)&&(a||"OscillatorNode"!==f.name&&"NoteOscillatorNode"!==f.name)&&e!==f){var g=_.find(b.connections,function(a){return a.sourceNode===e&&a.targetNode===f||a.sourceNode===f&&a.targetNode===e});if(!g)if(a){var i=d.randomElementIn(f.connectableParameters),j=i.amplitudeScaling.min,k=i.amplitudeScaling.max;c.push(new h({sourceNode:e,targetNode:f,targetParameter:i.name,targetParameterNodeName:i.nodeName,weight:d.randomIn(j,k),mutationDelta:{min:j/12,max:j/12},randomMutationRange:{min:j,max:k}}))}else c.push(new h({sourceNode:e,targetNode:f,weight:.5}))}})}),c},m.prototype.mutateConnectionWeights=function(a){"undefined"==typeof a&&(a=!0);var b=this.connectionMutationRate,c=!1,e=[];if(_.forEach(this.connections,function(a){d.random()<=b&&(e.push(a.mutate()),c=!0)}),!c&&a){j("forcing weight mutation");var f=d.randomElementIn(this.connections);e.push(f.mutate())}return this.lastMutation={objectsChanged:e,changeDescription:"Mutated connection gain"},this},m.prototype.mutateNodeParameters=function(a){"undefined"==typeof a&&(a=!0);var b=this.nodeMutationRate,c=!1,e=[];if(_.forEach(this.nodes,function(a){d.random()<=b&&(e.push(a.mutate()),c=!0)}),!c&&a){j("forcing node mutation");var f=d.randomElementIn(this.nodes);e.push(f.mutate())}return this.lastMutation={objectsChanged:e,changeDescription:"Mutated Node Parameters"},this},m.prototype.getEnabledConnections=function(){return _.filter(this.connections,"enabled")},m.prototype.getNoteOscillatorNodes=function(){return _.filter(this.nodes,{name:"NoteOscillatorNode"})},m.prototype.getOscillatorNodes=function(){return _.filter(this.nodes,{name:"OscillatorNode"})},m.prototype.getOscillatorAndNoteOscillatorNodes=function(){return _.filter(this.nodes,function(a){return"OscillatorNode"===a.name||"NoteOscillatorNode"===a.name})},m.prototype.toString=function(){var a="Nodes:<br>";return _.forEach(this.nodes,function(b){a+=b.toString()+"<br>"}),a+="<br>Connections:<br>",_.forEach(this.connections,function(b){a+=b.toString()+"<br>"}),a},m.prototype.toJSON=function(){var a={id:this.id,nodes:[],connections:[]};return _.forEach(this.nodes,function(b){a.nodes.push(b.toJSON())}),_.forEach(this.connections,function(b){a.connections.push(b.toJSON())}),JSON.stringify(a)},m.createFromJSON=function(a){var b=JSON.parse(a),c=[],e=[];return _.forEach(b.nodes,function(a){var b=JSON.parse(a),e=d.lowerCaseFirstLetter(b.name),f=require("asNEAT/nodes/"+e)["default"],g=new f(b);c.push(g)}),_.forEach(b.connections,function(a){var b,d,f,g=JSON.parse(a),i=g.sourceNode,j=g.targetNode;b=_.find(c,{id:i}),d=_.find(c,{id:j}),g.sourceNode=b,g.targetNode=d,f=new h(g),e.push(f)}),b.nodes=c,b.connections=e,new m(b)},a["default"]=m}),define("asNEAT/nodes/compressorNode",["exports"],function(a){"use strict";var b=require("asNEAT/utils")["default"],c=require("asNEAT/nodes/node")["default"],d=require("asNEAT/asNEAT")["default"].context,e="CompressorNode",f=function(a){c.call(this,a)};f.prototype=Object.create(c.prototype),f.prototype.name=e,f.prototype.defaultParameters={threshold:0,knee:0,ratio:0,reduction:0,attack:0,release:0,parameterMutationChance:.1,mutatableParameters:[{name:"threshold",mutationDeltaChance:.8,mutationDelta:{min:-5,max:5},randomMutationRange:{min:-50,max:10}},{name:"knee",mutationDeltaChance:.8,mutationDelta:{min:-5,max:5},randomMutationRange:{min:20,max:40}},{name:"ratio",mutationDeltaChance:.8,mutationDelta:{min:-1,max:1},randomMutationRange:{min:8,max:16}},{name:"reduction",mutationDeltaChance:.8,mutationDelta:{min:-1,max:1},randomMutationRange:{min:-10,max:0}},{name:"attack",mutationDeltaChance:.8,mutationDelta:{min:-.02,max:.02},randomMutationRange:{min:0,max:.1}},{name:"release",mutationDeltaChance:.8,mutationDelta:{min:-.1,max:.1},randomMutationRange:{min:0,max:.1}}]},f.prototype.clone=function(){return new f({id:this.id,threshold:this.threshold,knee:this.knee,ratio:this.ratio,reduction:this.reduction,attack:this.attack,release:this.release,parameterMutationChance:this.parameterMutationChance,mutatableParameters:_.cloneDeep(this.mutatableParameters)})},f.prototype.refresh=function(){var a=d.createDynamicsCompressor();a.threshold.value=this.threshold,a.knee.value=this.knee,a.ratio.value=this.ratio,a.reduction.value=this.reduction,a.attack.value=this.attack,a.release.value=this.release,this.node=a},f.prototype.getParameters=function(){return{name:e,id:this.id,threshold:this.threshold,knee:this.knee,ratio:this.ratio,reduction:this.reduction,attack:this.attack,release:this.release}},f.prototype.toString=function(){return this.id+": CompressorNode("+this.threshold.toFixed(2)+","+this.knee.toFixed(2)+","+this.ratio.toFixed(2)+","+this.reduction.toFixed(2)+","+this.attack.toFixed(2)+","+this.release.toFixed(2)+")"},f.random=function(){var a=b.randomIn(-50,10),c=b.randomIn(20,40),d=b.randomIn(8,16),e=b.randomIn(-10,0),g=b.randomIn(0,.1),h=b.randomIn(0,.1);return new f({threshold:a,knee:c,ratio:d,reduction:e,attack:g,release:h})},a["default"]=f}),define("asNEAT/nodes/convolverNode",["exports"],function(a){"use strict";var b=(require("asNEAT/utils")["default"],require("asNEAT/nodes/node")["default"]),c=require("asNEAT/asNEAT")["default"].context,d="ConvolverNode",e=function(a){if(b.call(this,a),null===this.audioBuffer&&c.supported){for(var d=c.createBuffer(2,.5*c.sampleRate,c.sampleRate),e=d.getChannelData(0),f=d.getChannelData(1),g=0;g<d.length;g++)e[g]=2*Math.random()-1,f[g]=2*Math.random()-1;this.audioBuffer=d}};e.prototype=Object.create(b.prototype),e.prototype.name=d,e.prototype.defaultParameters={audioBuffer:null,parameterMutationChance:.1},e.prototype.clone=function(){return new e({id:this.id,audioBuffer:this.audioBuffer,parameterMutationChance:this.parameterMutationChance,mutatableParameters:_.cloneDeep(this.mutatableParameters)})},e.prototype.refresh=function(){var a=c.createConvolver();a.buffer=this.audioBuffer,this.node=a},e.prototype.getParameters=function(){return{name:d,id:this.id}},e.prototype.toString=function(){return this.id+": ConvolverNode()"},e.random=function(){return new e},a["default"]=e}),define("asNEAT/nodes/delayNode",["exports"],function(a){"use strict";var b=require("asNEAT/utils")["default"],c=require("asNEAT/nodes/node")["default"],d=require("asNEAT/asNEAT")["default"].context,e="DelayNode",f=function(a){c.call(this,a)};f.prototype=Object.create(c.prototype),f.prototype.name=e,f.prototype.defaultParameters={delayTime:0,parameterMutationChance:.1,mutatableParameters:[{name:"delayTime",mutationDeltaChance:.8,mutationDelta:{min:-.5,max:.5},randomMutationRange:{min:0,max:3}}]},f.prototype.clone=function(){return new f({id:this.id,delayTime:this.delayTime,parameterMutationChance:this.parameterMutationChance,mutatableParameters:_.cloneDeep(this.mutatableParameters)})},f.prototype.refresh=function(){var a=d.createDelay();a.delayTime.value=this.delayTime,this.node=a},f.prototype.getParameters=function(){return{name:e,id:this.id,delayTime:this.delayTime}},f.prototype.toString=function(){return this.id+": DelayNode("+this.delayTime.toFixed(2)+")"},f.random=function(){return new f({delayTime:b.randomIn(0,3)})},a["default"]=f}),define("asNEAT/nodes/feedbackDelayNode",["exports"],function(a){"use strict";var b=require("asNEAT/utils")["default"],c=require("asNEAT/nodes/node")["default"],d=require("asNEAT/asNEAT")["default"].context,e="FeedbackDelayNode",f=function(a){c.call(this,a)};f.prototype=Object.create(c.prototype),f.prototype.name=e,f.prototype.defaultParameters={delayTime:0,feedbackRatio:.2,parameterMutationChance:.1,mutatableParameters:[{name:"delayTime",mutationDeltaChance:.8,mutationDelta:{min:-.5,max:.5},randomMutationRange:{min:0,max:3}},{name:"feedbackRatio",mutationDeltaChance:.8,mutationDelta:{min:-.2,max:.2},randomMutationRange:{min:0,max:.6}}]},f.prototype.clone=function(){return new f({id:this.id,delayTime:this.delayTime,feedbackRatio:this.feedbackRatio,parameterMutationChance:this.parameterMutationChance,mutatableParameters:_.cloneDeep(this.mutatableParameters)})},f.prototype.refresh=function(){var a=d.createGain();a.gain.value=1;var b=d.createDelay();b.delayTime.value=this.delayTime;var c=d.createGain();c.gain.value=this.feedbackRatio,a.connect(b),b.connect(c),c.connect(a),this.node=a},f.prototype.getParameters=function(){return{name:e,id:this.id,delayTime:this.delayTime,feedbackRatio:this.feedbackRatio}},f.prototype.toString=function(){return this.id+": FeedbackDelayNode("+this.delayTime.toFixed(2)+","+this.feedbackRatio.toFixed(2)+")"},f.random=function(){return new f({delayTime:b.randomIn(0,3),feedbackRatio:b.randomIn(0,.6)})},a["default"]=f}),define("asNEAT/nodes/filterNode",["exports"],function(a){"use strict";var b=require("asNEAT/utils")["default"],c=require("asNEAT/nodes/node")["default"],d=require("asNEAT/asNEAT")["default"].context,e="FilterNode",f=0,g=1500,h=1e-4,i=20,j=-5,k=5,l=function(a){c.call(this,a)};l.prototype=Object.create(c.prototype),l.prototype.name=e,l.prototype.defaultParameters={type:0,frequency:500,detune:0,q:1,gain:1,parameterMutationChance:.1,mutatableParameters:[{name:"type",mutationDeltaChance:0,randomMutationRange:{min:0,max:8},allowInverse:!1,discreteMutation:!0},{name:"frequency",mutationDeltaChance:.8,mutationDelta:{min:-500,max:500},randomMutationRange:{min:27.5,max:1046.5}}],connectableParameters:[{name:"frequency",amplitudeScaling:{min:f,max:g}},{name:"Q",amplitudeScaling:{min:h,max:h}},{name:"gain",amplitudeScaling:{min:j,max:k}}]},l.prototype.clone=function(){return new l({id:this.id,type:this.type,frequency:this.frequency,detune:this.detune,q:this.q,gain:this.gain,parameterMutationChance:this.parameterMutationChance,mutatableParameters:_.cloneDeep(this.mutatableParameters)})},l.prototype.refresh=function(){var a=d.createBiquadFilter();a.type=this.type,a.frequency.value=this.frequency,a.detune.value=this.detune,a.Q.value=this.q,a.gain.value=this.gain,this.node=a},l.prototype.getParameters=function(){return{name:e,id:this.id,type:l.TYPES.nameFor(this.type),frequency:this.frequency,detune:this.detune,q:this.q,gain:this.gain}},l.prototype.toString=function(){return this.id+": FilterNode("+this.type+","+this.frequency.toFixed(2)+")"},l.TYPES=["lowpass","highpass","bandpass","lowshelf","highshelf","peaking","notch","allpass"],l.TYPES.nameFor=function(a){return"string"==typeof a?a:l.TYPES[a]},l.random=function(){var a=b.randomIndexIn(0,l.TYPES.length),c=b.randomIn(f,g),d=b.randomIn(h,i),e=b.randomIn(j,k);return new l({type:l.TYPES[a],frequency:c,q:d,gain:e})},a["default"]=l}),define("asNEAT/nodes/gainNode",["exports"],function(a){"use strict";var b=require("asNEAT/utils")["default"],c=require("asNEAT/nodes/node")["default"],d=require("asNEAT/asNEAT")["default"].context,e="GainNode",f=.5,g=1.5,h=function(a){c.call(this,a)};h.prototype=Object.create(c.prototype),h.prototype.name=e,h.prototype.defaultParameters={gain:1,parameterMutationChance:.1,mutatableParameters:[{name:"gain",mutationDeltaChance:.8,mutationDelta:{min:-.2,max:.2},randomMutationRange:{min:-1,max:1}}],connectableParameters:[{name:"gain",amplitudeScaling:{min:-1*g,max:g}}]},h.prototype.clone=function(){return new h({id:this.id,gain:this.gain,parameterMutationChance:this.parameterMutationChance,mutatableParameters:_.cloneDeep(this.mutatableParameters)})},h.prototype.refresh=function(){var a=d.createGain();a.gain.value=this.gain,this.node=a},h.prototype.getParameters=function(){return{name:e,id:this.id,gain:this.gain}},h.prototype.toString=function(){return this.id+": GainNode("+this.gain.toFixed(2)+")"},h.random=function(){var a=b.randomBool(),c=b.randomIn(f,g);return c*=a?-1:1,new h({gain:c})},a["default"]=h}),define("asNEAT/nodes/node",["exports"],function(a){"use strict";var b=require("asNEAT/utils")["default"],c="Node",d=function(a){b.extend(this,this.defaultParameters,a),this.hasChanged=!1,this.id=a&&"undefined"!=typeof a.id?a.id:b.createHash()};d.prototype.name=c,d.prototype.defaultParameters={parameterMutationChance:.1,mutatableParameters:[],connectableParameters:[]},d.prototype.clone=function(){throw"clone not implemented"},d.prototype.refresh=function(){throw"refresh not implemented"},d.prototype.getParameters=function(){throw"getParameters not implemented"},d.prototype.toString=function(){throw"toString not implemented"},d.prototype.mutate=function(){function a(a){b.mutateParameter({obj:c,parameter:a.name,mutationDeltaChance:a.mutationDeltaChance,mutationDelta:a.mutationDelta,randomMutationRange:a.randomMutationRange,allowInverse:a.allowInverse,discreteMutation:a.discreteMutation},this)}var c=this,d=this.parameterMutationChance,e=this.mutatableParameters,f=!1;if(!e||0===e.length)return b.log("no mutation parameters"),this;if(_.forEach(this.mutatableParameters,function(c){return b.randomChance(d)?(a(c),void(f=!0)):!0}),!f){var g=b.randomElementIn(e);a(g)}return this},d.prototype.toJSON=function(){var a=this.getParameters();return JSON.stringify(a)},d.random=function(){throw"static random not implemented"},a["default"]=d}),define("asNEAT/nodes/noteOscillatorNode",["exports"],function(a){"use strict";var b=require("asNEAT/utils")["default"],c=require("asNEAT/nodes/node")["default"],d=require("asNEAT/nodes/oscillatorNode")["default"],e=require("asNEAT/asNEAT")["default"].context,f="NoteOscillatorNode",g=function(a){c.call(this,a)};g.prototype=Object.create(c.prototype),g.prototype.name=f,g.prototype.defaultParameters={name:f,type:0,stepFromRootNote:0,noteOffset:0,detune:0,attackDuration:.2,decayDuration:.4,releaseDuration:.2,sustainDuration:.5,attackVolume:1.1,sustainVolume:1,parameterMutationChance:.1,mutatableParameters:[{name:"type",mutationDeltaChance:0,randomMutationRange:{min:0,max:4},allowInverse:!1,discreteMutation:!0},{name:"noteOffset",mutationDeltaChance:.8,mutationDelta:{min:-5,max:5},randomMutationRange:{min:-20,max:20},discreteMutation:!0},{name:"attackDuration",mutationDeltaChance:.8,mutationDelta:{min:-.1,max:.1},randomMutationRange:{min:.01,max:1}},{name:"decayDuration",mutationDeltaChance:.8,mutationDelta:{min:-.1,max:.1},randomMutationRange:{min:.01,max:1}},{name:"releaseDuration",mutationDeltaChance:.8,mutationDelta:{min:-.1,max:.1},randomMutationRange:{min:.01,max:1}},{name:"attackVolume",mutationDeltaChance:.8,mutationDelta:{min:-.1,max:.1},randomMutationRange:{min:.5,max:1.5}}],connectableParameters:[{name:"frequency",nodeName:"oscNode",amplitudeScaling:{min:-2e3,max:2e3}}]},g.prototype.clone=function(){return new g({id:this.id,type:this.type,noteOffset:this.noteOffset,detune:this.detune,attackDuration:this.attackDuration,decayDuration:this.decayDuration,releaseDuration:this.releaseDuration,sustainDuration:this.sustainDuration,attackVolume:this.attackVolume,sustainVolume:this.sustainVolume,parameterMutationChance:this.parameterMutationChance,mutatableParameters:_.cloneDeep(this.mutatableParameters)})},g.prototype.refresh=function(){var a=e.createOscillator();a.type=this.type,a.frequency.value=b.frequencyOfStepsFromRootNote(this.stepFromRootNote+this.noteOffset),this.oscNode=a;var c=e.createGain();this.node=c,a.connect(c)},g.prototype.play=function(){var a=this.attackDuration+this.decayDuration+this.sustainDuration,b=this.node,c=this.oscNode,e=this.attackVolume,f=this.attackDuration,g=this.sustainVolume,h=this.decayDuration,i=this.releaseDuration;d.setupEnvelope(b,c,e,f,g,h),setTimeout(function(){d.setupRelease(b,c,i)},1e3*a)},g.prototype.playHold=function(){var a=(this.attackDuration+this.decayDuration+this.sustainDuration,this.node),b=this.oscNode,c=this.attackVolume,e=this.attackDuration,f=this.sustainVolume,g=this.decayDuration,h=this.releaseDuration;return d.setupEnvelope(a,b,c,e,f,g),function(){d.setupRelease(a,b,h)}},g.prototype.getParameters=function(){return{name:f,id:this.id,type:d.TYPES.nameFor(this.type),noteOffset:this.noteOffset,detune:this.detune,attackDuration:this.attackDuration,decayDuration:this.decayDuration,releaseDuration:this.releaseDuration,sustainDuration:this.sustainDuration,attackVolume:this.attackVolume,sustainVolume:this.sustainVolume}},g.prototype.toString=function(){return this.id+": NoteOscillatorNode("+this.type+","+this.noteOffset+", ADSR: "+this.attackDuration.toFixed(2)+" ("+this.attackVolume.toFixed(2)+"), "+this.decayDuration.toFixed(2)+", "+this.sustainDuration.toFixed(2)+" ("+this.sustainVolume.toFixed(2)+"), "+this.releaseDuration.toFixed(2)+")"},g.random=function(){var a=b.randomIndexIn(0,d.TYPES.length),c=b.randomIndexIn(-20,20),e=b.randomIn(.01,1),f=b.randomIn(.01,1),h=b.randomIn(.01,1),i=b.randomIn(.5,1.5);return new g({type:d.TYPES[a],noteOffset:c,attackDuration:e,decayDuration:f,releaseDuration:h,attackVolume:i})},a["default"]=g}),define("asNEAT/nodes/oscillatorNode",["exports"],function(a){"use strict";var b=require("asNEAT/utils")["default"],c=require("asNEAT/nodes/node")["default"],d=require("asNEAT/asNEAT")["default"].context,e="OscillatorNode",f=27.5,g=1046.5,h=function(a){c.call(this,a)};h.prototype=Object.create(c.prototype),h.prototype.name=e,h.prototype.defaultParameters={type:0,frequency:1e3,detune:0,attackDuration:.2,decayDuration:.4,releaseDuration:.2,sustainDuration:.5,attackVolume:1.1,sustainVolume:1,parameterMutationChance:.1,mutatableParameters:[{name:"type",mutationDeltaChance:0,randomMutationRange:{min:0,max:4},allowInverse:!1,discreteMutation:!0},{name:"frequency",mutationDeltaChance:.8,mutationDelta:{min:-500,max:500},randomMutationRange:{min:f,max:g}},{name:"attackDuration",mutationDeltaChance:.8,mutationDelta:{min:-.1,max:.1},randomMutationRange:{min:.01,max:1}},{name:"decayDuration",mutationDeltaChance:.8,mutationDelta:{min:-.1,max:.1},randomMutationRange:{min:.01,max:1}},{name:"releaseDuration",mutationDeltaChance:.8,mutationDelta:{min:-.1,max:.1},randomMutationRange:{min:.01,max:1}},{name:"attackVolume",mutationDeltaChance:.8,mutationDelta:{min:-.1,max:.1},randomMutationRange:{min:.5,max:1.5}}],connectableParameters:[{name:"frequency",nodeName:"oscNode",amplitudeScaling:{min:-2e3,max:2e3}}]},h.prototype.clone=function(){return new h({id:this.id,type:this.type,frequency:this.frequency,detune:this.detune,attackDuration:this.attackDuration,decayDuration:this.decayDuration,releaseDuration:this.releaseDuration,sustainDuration:this.sustainDuration,attackVolume:this.attackVolume,sustainVolume:this.sustainVolume,parameterMutationChance:this.parameterMutationChance,mutatableParameters:_.cloneDeep(this.mutatableParameters)})},h.prototype.refresh=function(){var a=d.createOscillator();a.type=this.type,a.frequency.value=this.frequency,this.oscNode=a;var b=d.createGain();this.node=b,a.connect(b)},h.prototype.play=function(){var a=this.attackDuration+this.decayDuration+this.sustainDuration,b=this.node,c=this.oscNode,d=this.attackVolume,e=this.attackDuration,f=this.sustainVolume,g=this.decayDuration,i=this.releaseDuration;h.setupEnvelope(b,c,d,e,f,g),setTimeout(function(){h.setupRelease(b,c,i)},1e3*a)},h.prototype.playHold=function(){var a=(this.attackDuration+this.decayDuration+this.sustainDuration,this.node),b=this.oscNode,c=this.attackVolume,d=this.attackDuration,e=this.sustainVolume,f=this.decayDuration,g=this.releaseDuration;return h.setupEnvelope(a,b,c,d,e,f),function(){h.setupRelease(a,b,g)}},h.prototype.getParameters=function(){return{name:e,id:this.id,type:h.TYPES.nameFor(this.type),frequency:this.frequency,detune:this.detune,attackDuration:this.attackDuration,decayDuration:this.decayDuration,releaseDuration:this.releaseDuration,sustainDuration:this.sustainDuration,attackVolume:this.attackVolume,sustainVolume:this.sustainVolume}},h.prototype.toString=function(){return this.id+": OscillatorNode(t:"+this.type+", f:"+this.frequency.toFixed(2)+", ADSR: "+this.attackDuration.toFixed(2)+" ("+this.attackVolume.toFixed(2)+"), "+this.decayDuration.toFixed(2)+", "+this.sustainDuration.toFixed(2)+" ("+this.sustainVolume.toFixed(2)+"), "+this.releaseDuration.toFixed(2)+")"},h.TYPES=["sine","square","sawtooth","triangle"],h.TYPES.nameFor=function(a){return"string"==typeof a?a:h.TYPES[a]},h.random=function(){var a=b.randomIndexIn(0,h.TYPES.length),c=b.randomIn(f,g),d=b.randomIn(.01,1),e=b.randomIn(.01,1),i=b.randomIn(.01,1),j=b.randomIn(.5,1.5);return new h({type:h.TYPES[a],frequency:c,attackDuration:d,decayDuration:e,releaseDuration:i,attackVolume:j})},h.setupEnvelope=function(a,b,c,e,f,g){var h=d.currentTime;a.gain.cancelScheduledValues(h),a.gain.value=1,a.gain.setValueAtTime(0,h),a.gain.linearRampToValueAtTime(c,h+e),a.gain.linearRampToValueAtTime(f,h+e+g),b.start(0)},h.setupRelease=function(a,b,c){var e=d.currentTime;a.gain.cancelScheduledValues(0),a.gain.setValueAtTime(a.gain.value,e),a.gain.linearRampToValueAtTime(0,e+c),b.stop(e+c)},a["default"]=h}),define("asNEAT/nodes/outNode",["exports"],function(a){"use strict";var b=require("asNEAT/nodes/node")["default"],c=require("asNEAT/asNEAT")["default"],d=c.context,e="OutNode",f=function(a){if(b.call(this,a),this.id=0,this.globalGain=c.globalGain,d.supported){var e=d.createGain();e.gain.value=1,e.connect(this.globalGain),this.node=e}};f.prototype=Object.create(b.prototype),f.prototype.name=e,f.prototype.defaultParameters={},f.prototype.clone=function(){return new f({id:this.id})},f.prototype.refresh=function(){},f.prototype.getParameters=function(){return{name:e,id:this.id}},f.prototype.toString=function(){return this.id+": OutNode"},a["default"]=f}),define("asNEAT/nodes/pannerNode",["exports"],function(a){"use strict";var b=require("asNEAT/utils")["default"],c=require("asNEAT/nodes/node")["default"],d=require("asNEAT/asNEAT")["default"].context,e="PannerNode",f=function(a){c.call(this,a)};f.prototype=Object.create(c.prototype),f.prototype.name=e,f.prototype.defaultParameters={x:0,y:0,z:0,parameterMutationChance:.1,mutatableParameters:[{name:"x",mutationDeltaChance:.8,mutationDelta:{min:-5,max:5},randomMutationRange:{min:-5,max:5}},{name:"y",mutationDeltaChance:.8,mutationDelta:{min:-5,max:5},randomMutationRange:{min:-5,max:5}},{name:"z",mutationDeltaChance:.8,mutationDelta:{min:-5,max:5},randomMutationRange:{min:-5,max:5}}]},f.prototype.clone=function(){return new f({id:this.id,x:this.x,y:this.y,z:this.z,parameterMutationChance:this.parameterMutationChance,mutatableParameters:_.cloneDeep(this.mutatableParameters)})},f.prototype.refresh=function(){var a=d.createPanner();a.setPosition(this.x,this.y,this.z),this.node=a},f.prototype.getParameters=function(){return{name:e,id:this.id,x:this.x.toFixed(2),y:this.y.toFixed(2),z:this.z.toFixed(2)}},f.prototype.toString=function(){return this.id+": PannerNode("+this.x.toFixed(2)+", "+this.y.toFixed(2)+", "+this.z.toFixed(2)+")"},f.random=function(){var a=b.randomIn(-5,5),c=b.randomIn(-5,5),d=b.randomIn(-5,5);return new f({x:a,y:c,z:d})},a["default"]=f}),define("asNEAT/population",["exports"],function(a){"use strict";var b=require("asNEAT/utils")["default"],c=require("asNEAT/network")["default"],d=(b.log,"Population"),e=function(a){b.extend(this,this.defaultParameters,a)};e.prototype.name=d,e.prototype.defaultParameters={networks:[],networkParameters:{},numberOfMutationsPerGeneration:1,numberOfNewParentMutations:3,populationCount:9,crossoverRate:.3,mutationRate:1},e.prototype.clone=function(){var a=[];return _.forEach(this.networks,function(b){a.push(b.clone())}),new e({networks:a,networkParameters:_.cloneDeep(this.networkParameters),numberOfMutationsPerGeneration:this.numberOfMutationsPerGeneration,numberOfNewParentMutations:this.numberOfNewParentMutations,populationCount:this.populationCount,crossoverRate:this.crossoverRate,mutationRate:this.mutationRate})},e.prototype.toString=function(){var a="Networks["+this.networks.length+"]:<br>";return a+="crossoverRate: "+this.crossoverRate+"<br>",a+="mutationRate: "+this.mutationRate+"<br>"},e.prototype.GenerateNewRandomParent=function(){var a,b,d=new c(this.networkParameters);for(a=0,b=this.numberOfNewParentMutations;b>a;++a)d.mutate();return d},e.generateFromParents=function(a,c){for(var d,f,g,h,i,j=new e(c),k=j.numberOfMutationsPerGeneration,l=(j.networkParameters,a.length>0),m=1===a.length;j.networks.length<j.populationCount;){if(h=!1,d=l?b.randomElementIn(a):j.GenerateNewRandomParent(),b.randomChance(j.crossoverRate)&&(f=!l||m?j.GenerateNewRandomParent():b.randomElementIn(a,d),d=d.crossWith(f),h=!0),b.randomChance(j.mutationRate)){for(h&&(i=d.lastMutation),d=d.clone(),g=0;k>g;++g)d.mutate();
h&&(d.lastMutation.objectsChanged=i.objectsChanged.concat(d.lastMutation.objectsChanged),d.lastMutation.changeDescription=i.changeDescription+" & "+d.lastMutation.changeDescription)}j.networks.push(d)}return j},a["default"]=e}),define("asNEAT/utils",["exports"],function(a){"use strict";var b={};b.IS_DEBUG=!0,b.log=function(a){b.IS_DEBUG&&(console.log(a),"undefined"!=typeof $&&$(".log").prepend("<div>"+a+"</div>"))},b.error=function(a){throw a},b.upperCaseFirstLetter=function(a){return a.charAt(0).toUpperCase()+a.slice(1)},b.lowerCaseFirstLetter=function(a){return a.charAt(0).toLowerCase()+a.slice(1)},b.random=function(){return Math.random()},b.randomIn=function(a,b){return _.isObject(a)&&(b=a.max,a=a.min),Math.random()*(b-a)+a},b.randomIndexIn=function(a,c){return _.isObject(a)&&(c=a.max,a=a.min),Math.floor(b.randomIn(a,c))},b.randomChance=function(a){return b.random()<=a},b.randomBool=function(){return!!Math.round(Math.random())},b.randomElementIn=function(a,c){if(0!==a.length){if(c)return b.randomElementIn(_.reject(a,c));var d=b.randomIndexIn(0,a.length);return a[d]}},b.clamp=function(a,b,c){return a>c?c:b>a?b:a},b.shuffle=function(a){for(var b,c,d=a.length;d;b=parseInt(Math.random()*d),c=a[--d],a[d]=a[b],a[b]=c);return a},b.weightedSelection=function(a){var b,c=Math.random(),d=0;return _.forEach(a,function(a){return d+=a.weight,d>=c?(b=a.element,!1):void 0}),b},b.mutateParameter=function(a,c){var d,e,f;return _.defaults(a,{obj:null,parameter:"param",mutationDeltaChance:.8,mutationDelta:{min:-.2,max:.2},mutateDelta:function(){return d=a.discreteMutation?b.randomIndexIn(a.mutationDelta):b.randomIn(a.mutationDelta),b.log("mutating by delta "+d.toFixed(3)),a.obj[a.parameter]+=d,{mutatedParameter:a.parameter,changeDescription:"by delta "+d.toFixed(3)}},randomMutationRange:{min:.1,max:1.5},mutateRandom:function(){return e=a.randomMutationRange,f=a.discreteMutation?b.randomIndexIn(e):b.randomIn(e),a.allowInverse&&b.randomBool()&&(f*=-1),b.log("mutating with new param "+f),a.obj[a.parameter]=f,{mutatedParameter:a.parameter,changeDescription:"to "+f}},allowInverse:!0,discreteMutation:!1}),b.log("mutating("+a.parameter+") "+a.obj),b.randomChance(a.mutationDeltaChance)?a.mutateDelta.call(c):a.mutateRandom.call(c)},b.cantorPair=function(a,b){return(a+b)*(a+b+1)/2+b},b.reverseCantorPair=function(a){var b=Math.floor((-1+Math.sqrt(1+8*a))/2),c=b*(b+3)/2-a,d=a-b*(b+1)/2;return{x:c,y:d}},b.extend=function(a,b,c){_.assign(a,_.cloneDeep(b),c)},b.roundTo2Places=function(a){return+(Math.round(a+"e+2")+"e-2")};var c=Math.pow(2,1/12),d=440,e={c:-9,d:-7,e:-5,f:-4,g:-2,a:0,b:2};b.frequencyForNote=function(a){var c=b.stepsFromRootNote(a);return b.frequencyOfStepsFromRootNote(c)},b.stepsFromRootNote=function(a){a=a.toLowerCase().split("");var b=a[0],c=parseInt(a[1],10),d=a[2],f=e[b];return"#"===d?++f:"b"===d&&--f,f+=12*(c-4)},b.noteForFrequency=function(){},b.frequencyOfStepsFromRootNote=function(a){return d*Math.pow(c,a)};var f=6,g="abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789";b.createHash=function(a,b){"undefined"==typeof a&&(a=f),"undefined"==typeof b&&(b=g);for(var c=0,d=[];a>c;++c)d.push(b.charAt(Math.floor(Math.random()*b.length)));return d.join("")},a["default"]=b});
//# sourceMappingURL=asNEAT.min.js.map